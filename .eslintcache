[{"/Users/tech-camp/portfolio/ilustration-app/src/reportWebVitals.js":"1","/Users/tech-camp/portfolio/ilustration-app/src/components/Header.js":"2","/Users/tech-camp/portfolio/ilustration-app/src/index.js":"3","/Users/tech-camp/portfolio/ilustration-app/src/components/Main.js":"4","/Users/tech-camp/portfolio/ilustration-app/src/pages/App.js":"5","/Users/tech-camp/portfolio/ilustration-app/src/components/Ilustration.js":"6","/Users/tech-camp/portfolio/ilustration-app/src/routing.js":"7","/Users/tech-camp/portfolio/ilustration-app/src/pages/Content.js":"8","/Users/tech-camp/portfolio/ilustration-app/src/components/contents/Title.js":"9","/Users/tech-camp/portfolio/ilustration-app/src/components/contents/Text.js":"10","/Users/tech-camp/portfolio/ilustration-app/src/components/contents/Reaction.js":"11","/Users/tech-camp/portfolio/ilustration-app/src/requests/IlustrationRequest.js":"12","/Users/tech-camp/portfolio/ilustration-app/src/hooks/GetId.js":"13","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/modalShow.js":"14","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/newUser.js":"15","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/TextInput.js":"16","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/textInput.js":"17","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/newIlustration.js":"18"},{"size":362,"mtime":1611842204099,"results":"19","hashOfConfig":"20"},{"size":760,"mtime":1614134266638,"results":"21","hashOfConfig":"20"},{"size":521,"mtime":1612508695674,"results":"22","hashOfConfig":"20"},{"size":647,"mtime":1614094322833,"results":"23","hashOfConfig":"20"},{"size":1057,"mtime":1614172579884,"results":"24","hashOfConfig":"20"},{"size":2130,"mtime":1614258209650,"results":"25","hashOfConfig":"20"},{"size":373,"mtime":1613136919560,"results":"26","hashOfConfig":"20"},{"size":778,"mtime":1613322002016,"results":"27","hashOfConfig":"20"},{"size":210,"mtime":1613182917543,"results":"28","hashOfConfig":"20"},{"size":213,"mtime":1613182946754,"results":"29","hashOfConfig":"20"},{"size":200,"mtime":1612848839575,"results":"30","hashOfConfig":"20"},{"size":130,"mtime":1613058005796,"results":"31","hashOfConfig":"20"},{"size":218,"mtime":1613182675729,"results":"32","hashOfConfig":"20"},{"size":1836,"mtime":1614258139694,"results":"33","hashOfConfig":"20"},{"size":7841,"mtime":1614168662556,"results":"34","hashOfConfig":"20"},{"size":390,"mtime":1614149379410,"results":"35","hashOfConfig":"20"},{"size":390,"mtime":1614149379410,"results":"36","hashOfConfig":"20"},{"size":2568,"mtime":1614178582998,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"18xzaei",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},"/Users/tech-camp/portfolio/ilustration-app/src/reportWebVitals.js",[],["90","91"],"/Users/tech-camp/portfolio/ilustration-app/src/components/Header.js",[],"/Users/tech-camp/portfolio/ilustration-app/src/index.js",["92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport Routing from \"./routing\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routing />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["93","94"],"/Users/tech-camp/portfolio/ilustration-app/src/components/Main.js",["95","96"],"import React, {useState, useEffect} from \"react\";\nimport Ilustration from \"./Ilustration\";\nimport IlustrationRequest from \"../requests/IlustrationRequest\";\n\nconst Main = () => {\n\n  const [resources, setResources] = useState([]);\n\n  useEffect(async () => {\n    try{\n      const ilustrations = await IlustrationRequest.get(\"/ilustrations\");\n      setResources(ilustrations.data);\n      console.log(resources)\n    }catch(err){\n      console.log(err);\n    }\n  },[]);\n\n  \n  return(\n    <div className=\"main\">\n      <div className=\"ilustration-wrapper\">\n        <Ilustration resources={resources} />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;",["97","98"],"/Users/tech-camp/portfolio/ilustration-app/src/pages/App.js",["99"],"import React, {useState} from \"react\";\nimport Header from \"../components/Header\";\nimport Main from \"../components/Main\";\nimport NewIlustration from \"../components/modal/newIlustration\";\nimport NewUser from \"../components/modal/newUser\";\nimport \"../App.css\";\n\n\nfunction App() {\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalIlustration, setOpenModalIlustration] = useState(false);\n\n  const handleOpen = () => {\n    setOpenModal(true);\n  };\n\n  const handleClose = () => {\n    setOpenModal(false);\n  };\n\n  const handleOpenIlustration = () => {\n    setOpenModalIlustration(true);\n  };\n\n  const handleCloseIlustration = () => {\n    setOpenModalIlustration(false);\n  };\n\n\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <NewUser\n        handleClose={handleClose}\n        open={openModal}\n      />\n      <div onClick={handleOpenIlustration}>投稿する</div>\n      <NewIlustration\n        handleClose={handleCloseIlustration}\n        open={openModalIlustration}\n      />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n",["100","101"],"/Users/tech-camp/portfolio/ilustration-app/src/components/Ilustration.js",["102","103","104","105","106","107"],"/Users/tech-camp/portfolio/ilustration-app/src/routing.js",["108"],"import React, {useState} from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport App from \"./pages/App\";\nimport Content from \"./pages/Content\";\n\nconst Routing = () => {\n\n  return(\n    <BrowserRouter>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/content\" component={Content} />\n    </BrowserRouter>\n  );\n}\n\nexport default Routing;",["109","110"],"/Users/tech-camp/portfolio/ilustration-app/src/pages/Content.js",["111","112","113","114","115"],"import React, {useState, useEffect} from \"react\";\nimport Header from \"../components/Header\";\nimport Title from \"../components/contents/Title\";\nimport Text from \"../components/contents/Text\";\nimport Reaction from \"../components/contents/Reaction\";\nimport IlustrationRequest from \"../requests/IlustrationRequest\";\nimport Ilustration from \"../components/Ilustration\";\nimport {DataContext} from \"../components/Ilustration\";\nimport {Link} from \"react-router-dom\";\nimport \"../Content.css\";\n\nconst Content = (props) => {\n  \n \n\n  // const { contentId } = useContext(DataContext)\n\n  \n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Title />\n      <Text />\n      <Reaction />\n      <Link to=\"/\">\n        Homeへ戻る\n      </Link>\n    </div>\n  );\n}\n\nexport default Content;","/Users/tech-camp/portfolio/ilustration-app/src/components/contents/Title.js",["116"],"import { Divider } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Title = (props) => {\n  return (\n    <div className=\"title\">\n      <h1 >{props.title}</h1>\n    </div>\n  );\n};\n\nexport default Title;","/Users/tech-camp/portfolio/ilustration-app/src/components/contents/Text.js",[],["117","118"],"/Users/tech-camp/portfolio/ilustration-app/src/components/contents/Reaction.js",["119"],"import { Divider } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Reaction = () => {\n  return(\n    <div>\n      いいね\n      おもしろい\n    </div>\n  );\n};\n\nexport default Reaction;","/Users/tech-camp/portfolio/ilustration-app/src/requests/IlustrationRequest.js",[],"/Users/tech-camp/portfolio/ilustration-app/src/hooks/GetId.js",["120"],"import { Divider } from \"@material-ui/core\";\nimport Content from \"../pages/Content\";\n\nconst GetId = (contentId) => {\n  return(\n    <div>\n      <Content contentId={contentId} />\n    </div>\n  );\n};\n\nexport default GetId;","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/modalShow.js",["121","122","123"],"/Users/tech-camp/portfolio/ilustration-app/src/components/modal/newUser.js",["124","125"],"import React, {useState, useCallback} from \"react\";\nimport IlustrationRequest from \"../../requests/IlustrationRequest\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from \"./textInput\";\n\n\nconst NewUser = (props) => {\n\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  \n\n  \n\n  const inputNickname = useCallback((event) => {\n    setNickname(event.target.value)\n    console.log(nickname);\n  },[setNickname]);\n  \n  const inputEmail = useCallback((event) => {\n    setEmail(event.target.value)\n  },[setEmail]);\n\n  const inputPassword = useCallback((event) => {\n    setPassword(event.target.value)\n  },[setPassword]);\n  \n  const inputPasswordConfirmation = useCallback((event) => {\n      setPasswordConfirmation(event.target.value)\n  },[setPasswordConfirmation]);\n\n  const submitForm = async () => {\n    try{\n      const userData = {user: {password: password, password_confirmation: passwordConfirmation, email: email, nickname: nickname}};\n      const user = await IlustrationRequest.post(\"/users\", userData);\n      console.log(user)\n      setPassword(\"\")\n      setPasswordConfirmation(\"\")\n      setEmail(\"\")\n      setNickname(\"\")\n      return props.handleClose()\n    }catch(err){\n      console.log(err);\n    }\n  };\n\n  return(\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">新規登録</DialogTitle>\n      <DialogContent>\n        <TextInput\n          label={\"password(必須)\"} multiline={false} rows={1}\n          value={password} type={\"password\"} onChange={inputPassword}\n        />\n        <TextInput\n          label={\"password確認(必須)\"} multiline={false} rows={1}\n          value={passwordConfirmation} type={\"password\"} onChange={inputPasswordConfirmation}\n        />\n        <TextInput\n          label={\"メールアドレス(必須)\"} multiline={false} rows={1}\n          value={email} type={\"email\"} onChange={inputEmail}\n        />\n        <TextInput\n          label={\"ニックネーム(必須)\"} multiline={true} rows={1}\n          value={nickname} type={\"text\"} onChange={inputNickname}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\">\n          キャンセル\n        </Button>\n        <Button onClick={submitForm} color=\"primary\">\n          送信する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n};\n\nexport default NewUser;\n\n\n\n// import React, {useState, useCallback} from \"react\";\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\n// import DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\n// import TextInput from \"./textInput\";\n\n\n// const NewUser = (props) => {\n\n//     const [password, setPassword] = useState(\"\");\n//     const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [nickname, setNickname] = useState(\"\");\n\n    \n\n//     const inputNickname = useCallback((event) => {\n//       setNickname(event.target.value)\n//     },[setNickname]);\n    \n//     const inputEmail = useCallback((event) => {\n//       setEmail(event.target.value)\n//     },[setEmail]);\n\n//     const inputPassword = useCallback((event) => {\n//       setPassword(event.target.value)\n//     },[setPassword]);\n    \n//     const inputPasswordConfirmation = useCallback((event) => {\n//         setPasswordConfirmation(event.target.value)\n//     },[setPasswordConfirmation]);\n\n//   const submitForm = () => {\n    \n//     const payload = {user: {\n//       password: password,\n//       password_confirmation: passwordConfirmation,\n//       email: email,\n//       nickname: nickname\n//     }}\n//     console.log(payload);\n\n//     const url = \"http://localhost:3000/users\"\n\n//     fetch(url, {\n//       method: 'POST',\n//       mode: 'cors',\n//       credentials: 'include',\n//       body: JSON.stringify(payload)\n//     }).then(() => {\n//       alert('登録が完了しました！')\n\n      // setPassword(\"\")\n      // setPasswordConfirmation(\"\")\n      // setEmail(\"\")\n      // setNickname(\"\")\n      // return props.handleClose()\n//     })\n//   }\n\n//   return(\n//     <Dialog\n//       open={props.open}\n//       onClose={props.handleClose}\n//       aria-labelledby=\"alert-dialog-title\"\n//       aria-describedby=\"alert-dialog-description\"\n//     >\n//       <DialogTitle id=\"alert-dialog-title\">新規登録</DialogTitle>\n//       <DialogContent>\n//         <TextInput\n//           label={\"password(必須)\"} multiline={false} rows={1}\n//           value={password} type={\"password\"} onChange={inputPassword}\n//         />\n//         <TextInput\n//           label={\"password確認(必須)\"} multiline={false} rows={1}\n//           value={passwordConfirmation} type={\"password\"} onChange={inputPasswordConfirmation}\n//         />\n//         <TextInput\n//           label={\"メールアドレス(必須)\"} multiline={false} rows={1}\n//           value={email} type={\"email\"} onChange={inputEmail}\n//         />\n//         <TextInput\n//           label={\"ニックネーム(必須)\"} multiline={true} rows={1}\n//           value={nickname} type={\"text\"} onChange={inputNickname}\n//         />\n//       </DialogContent>\n//       <DialogActions>\n//         <Button onClick={props.handleClose} color=\"primary\">\n//           キャンセル\n//         </Button>\n//         <Button onClick={submitForm} color=\"primary\">\n//           送信する\n//         </Button>\n//       </DialogActions>\n//     </Dialog>\n//   )\n// }\n\n// export default NewUser;\n\n\n\n// import React from \"react\";\n// import Modal from \"react-modal\";\n\n// // モーダルのスタイルを指定するための変数\n// const customStyles = {\n//   overlay: {\n//     backgroundColor: \"rgb(80, 80, 80)\",\n//   },\n//   content: {\n//     top: \"10%\",\n//     left: \"60%\",\n//     right: \"50%\",\n//     height: \"75vh\",\n//     width: \"20vw\",\n//     marginLeft: \"-30vw\",\n//     padding: \"2vw 10vw\",\n//   },\n// };\n\n\n// const NewUser = (props) => {\n//   // モーダルを設定するHTMLの要素を指定する\n//   Modal.setAppElement(\"#root\");\n//   return(\n//     <Modal \n//       // モーダルの開閉を管理するprops\n//       isOpen={props.open}\n//       onRequestClose={props.handleClose}\n//       // 先ほど定義した、モーダルのスタイルをpropsとして渡す\n//       style={customStyles}\n//     >\n//       <form className=\"flex direction_column horizontal_center vertical_center\">\n//         <h2 className=\"input_menu\">新規登録</h2>\n//         <div>\n//           <h4 className=\"input_title\">メールアドレス</h4>\n//           <input type=\"email\" />\n//           <h4 className=\"input_title\">password設定</h4>\n//           <input type=\"password\" />\n//           <h4 className=\"input_title\">password再入力</h4>\n//           <input type=\"password\" />\n//           <h4 className=\"input_title\">ニックネーム</h4>\n//           <input type=\"text\" />\n//         </div>\n//         <input className=\"input_submit\" type=\"button\" value=\"送信\" />\n//       </form>\n//     </Modal>\n//   );\n// }\n\n// export default NewUser;","/Users/tech-camp/portfolio/ilustration-app/src/components/modal/TextInput.js",[],"/Users/tech-camp/portfolio/ilustration-app/src/components/modal/textInput.js",[],"/Users/tech-camp/portfolio/ilustration-app/src/components/modal/newIlustration.js",["126"],"import React, {useState, useCallback} from \"react\";\nimport IlustrationRequest from \"../../requests/IlustrationRequest\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextInput from \"./textInput\";\n\n\nconst NewIlustration = (props) => {\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [image, setImage] = useState({});\n  \n  \n  const inputTitle = useCallback((event) => {\n    setTitle(event.target.value)\n  },[setTitle]);\n  \n  const inputContent = useCallback((event) => {\n    setContent(event.target.value)\n  },[setContent]);\n  \n  const inputImage = useCallback((event) => {\n    setImage(event.target.value)\n  },[setImage]);\n\n\n  // if (document.getElementById(\"fileInput\")) {\n  //   document.getElementById(\"fileInput\").addEventListener(\"change\", (e) =>{\n  //     setImage(e.target.files[0]);\n  //     console.log(e.target.files[0]);\n  //   });\n  // };\n  \n\n  const submitForm = async () => {\n    try{\n      const ilustrationData = {title: title, content: content, image: image};\n      const ilustration = await IlustrationRequest.post(\"/ilustrations\", ilustrationData);\n      console.log(ilustration)\n      setTitle(\"\")\n      setContent(\"\")\n      setImage({})\n      return props.handleClose()\n    }catch(err){\n      console.log(err);\n    }\n  };\n\n  return(\n    <Dialog\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">新規投稿</DialogTitle>\n      <DialogContent>\n        <TextInput\n          label={\"タイトル(必須)\"} multiline={false} rows={1}\n          value={title} type={\"text\"} onChange={inputTitle}\n        />\n        <TextInput\n          label={\"お話(必須)\"} multiline={false} rows={10}\n          value={content} type={\"text\"} onChange={inputContent}\n        />\n        <input type=\"file\" id=\"fileInput\" onChange={inputImage} />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\">\n          キャンセル\n        </Button>\n        <Button onClick={submitForm} color=\"primary\">\n          送信する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n};\n\nexport default NewIlustration;",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":11},{"ruleId":"127","replacedBy":"135"},{"ruleId":"129","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":9,"column":13,"nodeType":"139","endLine":17,"endColumn":4},{"ruleId":"137","severity":1,"message":"140","line":17,"column":5,"nodeType":"141","endLine":17,"endColumn":7,"suggestions":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"131","severity":1,"message":"145","line":13,"column":9,"nodeType":"133","messageId":"134","endLine":13,"endColumn":19},{"ruleId":"127","replacedBy":"146"},{"ruleId":"129","replacedBy":"147"},{"ruleId":"131","severity":1,"message":"148","line":3,"column":9,"nodeType":"133","messageId":"134","endLine":3,"endColumn":13},{"ruleId":"131","severity":1,"message":"149","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":15},{"ruleId":"131","severity":1,"message":"150","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":13},{"ruleId":"131","severity":1,"message":"151","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":38,"column":13,"nodeType":"139","endLine":48,"endColumn":4},{"ruleId":"152","severity":1,"message":"153","line":40,"column":5,"nodeType":"154","messageId":"155","endLine":46,"endColumn":7},{"ruleId":"131","severity":1,"message":"156","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"127","replacedBy":"157"},{"ruleId":"129","replacedBy":"158"},{"ruleId":"131","severity":1,"message":"156","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"159","line":1,"column":26,"nodeType":"133","messageId":"134","endLine":1,"endColumn":35},{"ruleId":"131","severity":1,"message":"160","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":26},{"ruleId":"131","severity":1,"message":"161","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":19},{"ruleId":"131","severity":1,"message":"162","line":8,"column":9,"nodeType":"133","messageId":"134","endLine":8,"endColumn":20},{"ruleId":"131","severity":1,"message":"163","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":17},{"ruleId":"127","replacedBy":"164"},{"ruleId":"129","replacedBy":"165"},{"ruleId":"131","severity":1,"message":"163","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":17},{"ruleId":"131","severity":1,"message":"163","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":17},{"ruleId":"131","severity":1,"message":"156","line":1,"column":16,"nodeType":"133","messageId":"134","endLine":1,"endColumn":24},{"ruleId":"131","severity":1,"message":"159","line":1,"column":26,"nodeType":"133","messageId":"134","endLine":1,"endColumn":35},{"ruleId":"131","severity":1,"message":"160","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":26},{"ruleId":"131","severity":1,"message":"166","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":25},{"ruleId":"137","severity":1,"message":"167","line":25,"column":5,"nodeType":"141","endLine":25,"endColumn":18,"suggestions":"168"},{"ruleId":"131","severity":1,"message":"166","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":25},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar",["169"],["170"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'resources'. Either include it or remove the dependency array.","ArrayExpression",["171"],["169"],["170"],"'handleOpen' is assigned a value but never used.",["169"],["170"],"'Link' is defined but never used.","'Content' is defined but never used.","'GetId' is defined but never used.","'SelectInput' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.",["169"],["170"],"'useEffect' is defined but never used.","'IlustrationRequest' is defined but never used.","'Ilustration' is defined but never used.","'DataContext' is defined but never used.","'Divider' is defined but never used.",["169"],["170"],"'DialogContentText' is defined but never used.","React Hook useCallback has a missing dependency: 'nickname'. Either include it or remove the dependency array.",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [resources]",{"range":"177","text":"178"},"Update the dependencies array to be: [nickname]",{"range":"179","text":"180"},[458,460],"[resources]",[865,878],"[nickname]"]